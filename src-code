{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "id": "C53xF8r5k9uL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import matplotlib as mpl\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns \n",
        "import warnings "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "KK4FgdSYnjcO",
        "colab_type": "text"
      },
      "source": [
        "**Purpose of the Study**\n",
        "\n",
        "In this study relation between years of experince and salary from different industries in U.S. was examined. \n",
        "\n",
        "Salaries are given in U.S. dollars. Ex: 103234 = 103234$"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "iSpuXI-omPlB",
        "colab_type": "text"
      },
      "source": [
        "**INTRO TO RESEARCH METHODS**\n",
        "\n",
        "**1. Mean** : Commonly referred to as the average. When we are looking to calculate the mean, we add up a list of numbers and then divide that number by the items on the list.  It’s not recommended as a standalone statistical analysis method. This is because doing so can potentially ruin the complete efforts behind the calculation, seeing as it is also related to the mode (the value that occurs most often) and median (the middle) in some data sets.\n",
        "\n",
        "**2.  Standard deviation** : Standard deviation is a method of statistical analysis that measures the spread of data around the mean. Standard deviation is mainly used when we need to determine the dispersion of data points (whether or not they’re clustered). On a similar note to the downside of using mean, the standard deviation can be misleading when used as the only method in your statistical analysis.\n",
        "\n",
        "**3. Regression** :  Regression is the relationship between a dependent variable (the data you’re looking to measure) and an independent variable (the data used to predict the dependent variable). One disadvantage of using regression as part of statistical analysis is that regression isn’t very distinctive, meaning that although the outliers on a scatter plot (or regression analysis graph) are important, so are the reasons as to why they’re outliers.\n",
        "\n",
        "**4. Hypothesis Testing** : In statistical analysis, hypothesis testing, also known as “T Testing”, is a key to testing the two sets of random variables within the data set. This method is all about testing if a certain argument or conclusion is true for the data set. It allows for comparing the data against various hypotheses and assumptions. It can also assist in forecasting how decisions made could affect the business. Hypothesis testing can sometimes be clouded and skewed by common errors, like the placebo effect. This occurs when statistical analysts conducting the test falsely expect a certain result and then see that result, no matter the circumstances.\n",
        "\n",
        "**5. Sample Size Determination** : When it comes to analyzing data for statistical analysis, sometimes the dataset is simply too large, making it difficult to collect accurate data for each element of the dataset. When this is the case, most go the route of analyzing a sample size, or smaller size, of data, which is called sample size determination. To do this correctly, you’ll need to determine the right size of the sample to be accurate. If the sample size is too small, you won’t have valid results at the end of your analysis.\n",
        "As you analyze a new and untested variable of data within this method, you’ll need to rely on certain assumptions. Doing so could result in a completely inaccurate assumption. If this error occurs during this statistical analysis method, it can negatively affect the rest of your data analysis. These errors are called sampling errors and are measured by a confidence interval. For instance, if you state that your results are at a 90% confidence level, it means if you were to perform the same analysis again and again, 90% of the time your results will be the same.\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ad2cVbMElzYk",
        "colab_type": "code",
        "outputId": "30d71364-99a1-46f6-ddfa-f1a23da2bca1",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        }
      },
      "source": [
        "import io\n",
        "url = 'https://raw.githubusercontent.com/Hakanonay5/datasetofhkn/master/Salary.csv'\n",
        "df = pd.read_csv(url)\n",
        "\n",
        "\n",
        "df"
      ],
      "execution_count": 96,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearsExperience</th>\n",
              "      <th>Salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1.1</td>\n",
              "      <td>39343</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.3</td>\n",
              "      <td>46205</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1.5</td>\n",
              "      <td>37731</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.0</td>\n",
              "      <td>43525</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2.2</td>\n",
              "      <td>39891</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>2.9</td>\n",
              "      <td>56642</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>3.0</td>\n",
              "      <td>60150</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>3.2</td>\n",
              "      <td>54445</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>3.2</td>\n",
              "      <td>64445</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>3.7</td>\n",
              "      <td>57189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>3.9</td>\n",
              "      <td>63218</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>4.0</td>\n",
              "      <td>55794</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>4.0</td>\n",
              "      <td>56957</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>4.1</td>\n",
              "      <td>57081</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>4.5</td>\n",
              "      <td>61111</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>4.9</td>\n",
              "      <td>67938</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>5.1</td>\n",
              "      <td>66029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>5.3</td>\n",
              "      <td>83088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>5.9</td>\n",
              "      <td>81363</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>6.0</td>\n",
              "      <td>93940</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>6.8</td>\n",
              "      <td>91738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>7.1</td>\n",
              "      <td>98273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>7.9</td>\n",
              "      <td>101302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>8.2</td>\n",
              "      <td>113812</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>8.7</td>\n",
              "      <td>109431</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>9.0</td>\n",
              "      <td>105582</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>9.5</td>\n",
              "      <td>116969</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>9.6</td>\n",
              "      <td>112635</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>10.3</td>\n",
              "      <td>122391</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>10.5</td>\n",
              "      <td>121872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>11.2</td>\n",
              "      <td>127345</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>11.5</td>\n",
              "      <td>126756</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>12.3</td>\n",
              "      <td>128765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>12.9</td>\n",
              "      <td>135675</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>13.5</td>\n",
              "      <td>139465</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    YearsExperience  Salary\n",
              "0               1.1   39343\n",
              "1               1.3   46205\n",
              "2               1.5   37731\n",
              "3               2.0   43525\n",
              "4               2.2   39891\n",
              "5               2.9   56642\n",
              "6               3.0   60150\n",
              "7               3.2   54445\n",
              "8               3.2   64445\n",
              "9               3.7   57189\n",
              "10              3.9   63218\n",
              "11              4.0   55794\n",
              "12              4.0   56957\n",
              "13              4.1   57081\n",
              "14              4.5   61111\n",
              "15              4.9   67938\n",
              "16              5.1   66029\n",
              "17              5.3   83088\n",
              "18              5.9   81363\n",
              "19              6.0   93940\n",
              "20              6.8   91738\n",
              "21              7.1   98273\n",
              "22              7.9  101302\n",
              "23              8.2  113812\n",
              "24              8.7  109431\n",
              "25              9.0  105582\n",
              "26              9.5  116969\n",
              "27              9.6  112635\n",
              "28             10.3  122391\n",
              "29             10.5  121872\n",
              "30             11.2  127345\n",
              "31             11.5  126756\n",
              "32             12.3  128765\n",
              "33             12.9  135675\n",
              "34             13.5  139465"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 96
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "udtKMcworooA",
        "colab_type": "text"
      },
      "source": [
        "**VISUALIZING DATA**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FzilUzEapFa0",
        "colab_type": "code",
        "outputId": "5009169d-ae77-446c-bed4-16542663ed3f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 459
        }
      },
      "source": [
        "sns.jointplot(df[\"YearsExperience\"], df[\"Salary\"], data = df)"
      ],
      "execution_count": 97,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.JointGrid at 0x7f827eb27518>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 97
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x432 with 3 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CPQXkl8jAT5f",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        },
        "outputId": "19ba0b19-1f49-4db0-cb74-a42cef9fd35f"
      },
      "source": [
        "sns.lmplot(x='YearsExperience' , y = 'Salary', data = df)"
      ],
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<seaborn.axisgrid.FacetGrid at 0x7f827b8cbd30>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 98
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "a-_bz763pyxN",
        "colab_type": "text"
      },
      "source": [
        ""
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Yb-Z1Yk2pzDG",
        "colab_type": "code",
        "outputId": "cf1a1e85-db53-4613-9533-ee43e6bc9b21",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        }
      },
      "source": [
        "df.Salary.hist(color='pink')\n",
        "plt.title(\"Histogram-Plot\", y=1.1015, fontsize = 20)\n",
        "plt.xlabel(\"Salary\", labelpad = 14)\n",
        "plt.ylabel(\"Frequency\", labelpad = 14)"
      ],
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Frequency')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 99
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9rjM4c0m-h4J",
        "colab_type": "code",
        "outputId": "00cbae8c-df93-4a84-e13f-2cdbd0c0a855",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 283
        }
      },
      "source": [
        "sns.boxplot(data = df.Salary)"
      ],
      "execution_count": 100,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f827b941048>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 100
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "d6Dd4rURs_g_",
        "colab_type": "text"
      },
      "source": [
        "**CENTRAL TENDENCY**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9FO22VSQtGDT",
        "colab_type": "code",
        "outputId": "cdff1104-0506-46d0-96ef-c2b5da8e2486",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        }
      },
      "source": [
        "mean1 = df['Salary'].mean()\n",
        "sum1 = df['Salary'].sum()\n",
        "count1 = df['Salary'].count()\n",
        "median1 = df['Salary'].median() \n",
        "\n",
        "\n",
        "print ('Mean salary: ' + str(mean1))\n",
        "print ('Sum of salaries: ' + str(sum1))\n",
        "print ('Count of salaries: ' + str(count1))\n",
        "print ('Median salary: ' + str(median1))\n",
        "\n",
        "\n"
      ],
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Mean salary: 83945.6\n",
            "Sum of salaries: 2938096\n",
            "Count of salaries: 35\n",
            "Median salary: 81363.0\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PRTgSVVfvDAM",
        "colab_type": "text"
      },
      "source": [
        " **VARIABILITY**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JtEy5CYCvSEQ",
        "colab_type": "code",
        "outputId": "75a57a5e-0afc-455e-d7fe-d922ebfc7a7a",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 90
        }
      },
      "source": [
        "max1 = df['Salary'].max()\n",
        "min1 = df['Salary'].min()\n",
        "std1 = df['Salary'].std() \n",
        "var1 = df['Salary'].var() \n",
        "\n",
        "print ('Max salary: ' + str(max1))\n",
        "print ('Min salary: ' + str(min1))\n",
        "print ('Standart Deviation of salaries: ' + str(std1))\n",
        "print ('Variance of salaries: ' + str(var1))"
      ],
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Max salary: 139465\n",
            "Min salary: 37731\n",
            "Standart Deviation of salaries: 32162.673003306914\n",
            "Variance of salaries: 1034437534.7176473\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Tlf0DvVLyKq-",
        "colab_type": "code",
        "outputId": "0a96e72b-22a4-4c86-a460-d3cb98cfca56",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 288
        }
      },
      "source": [
        "df.describe()"
      ],
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>YearsExperience</th>\n",
              "      <th>Salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>35.000000</td>\n",
              "      <td>35.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>6.308571</td>\n",
              "      <td>83945.600000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.618610</td>\n",
              "      <td>32162.673003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.100000</td>\n",
              "      <td>37731.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>3.450000</td>\n",
              "      <td>57019.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>5.300000</td>\n",
              "      <td>81363.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>9.250000</td>\n",
              "      <td>113223.500000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>13.500000</td>\n",
              "      <td>139465.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       YearsExperience         Salary\n",
              "count        35.000000      35.000000\n",
              "mean          6.308571   83945.600000\n",
              "std           3.618610   32162.673003\n",
              "min           1.100000   37731.000000\n",
              "25%           3.450000   57019.000000\n",
              "50%           5.300000   81363.000000\n",
              "75%           9.250000  113223.500000\n",
              "max          13.500000  139465.000000"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 103
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "eBAPkg1O0bIZ",
        "colab_type": "code",
        "outputId": "adda5c91-38e7-479d-94e7-484014789494",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 72
        }
      },
      "source": [
        "sorted(df.Salary)\n",
        "#Q1 = df.quantile(0.25)\n",
        "#Q3 = df.quantile(0.75)\n",
        "Q1,Q3 = np.percentile(df.Salary, [25,75])\n",
        "IQR = Q3 - Q1\n",
        "\n",
        "print(\"Outlier Data = \" + str(IQR))\n",
        "\n",
        "lower = Q1 - (1.5 * IQR)\n",
        "upper = Q3 + (1.5 * IQR)\n",
        "print(\"Lower bound =\" + str(lower))\n",
        "print(\"Upper bound=\" + str(upper))\n"
      ],
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Outlier Data = 56204.5\n",
            "Lower bound =-27287.75\n",
            "Upper bound=197530.25\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "PV3-m7jq0tsT",
        "colab_type": "text"
      },
      "source": [
        "**STANDARDIZING**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RgAX0xJt0wDd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "2a89e140-424f-42b0-e521-0c7e1824736d"
      },
      "source": [
        "#Normal Disturbition\n",
        "datacount = 35\n",
        "np.random.seed(42)\n",
        "\n",
        "\n",
        "df_Salary = pd.DataFrame(data={'Salary': np.random.normal(loc=66, scale=2.9, size=datacount)})\n",
        "df_Salary"
      ],
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Salary</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>67.440471</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>65.599034</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>67.878297</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>70.416787</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>65.320955</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>65.321003</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>70.579717</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>68.225561</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>64.638524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>67.573424</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>64.656089</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>64.649384</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>66.701691</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>60.451487</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>60.997738</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>64.369366</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>63.062790</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>66.911317</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>63.366730</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>61.904319</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>70.250381</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>65.345249</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>66.195832</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>61.868230</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>64.421290</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>66.321676</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>62.662119</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>67.089524</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>64.258148</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>65.154088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>64.255051</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>71.371607</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>65.960858</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>62.932638</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>68.385380</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Salary\n",
              "0   67.440471\n",
              "1   65.599034\n",
              "2   67.878297\n",
              "3   70.416787\n",
              "4   65.320955\n",
              "5   65.321003\n",
              "6   70.579717\n",
              "7   68.225561\n",
              "8   64.638524\n",
              "9   67.573424\n",
              "10  64.656089\n",
              "11  64.649384\n",
              "12  66.701691\n",
              "13  60.451487\n",
              "14  60.997738\n",
              "15  64.369366\n",
              "16  63.062790\n",
              "17  66.911317\n",
              "18  63.366730\n",
              "19  61.904319\n",
              "20  70.250381\n",
              "21  65.345249\n",
              "22  66.195832\n",
              "23  61.868230\n",
              "24  64.421290\n",
              "25  66.321676\n",
              "26  62.662119\n",
              "27  67.089524\n",
              "28  64.258148\n",
              "29  65.154088\n",
              "30  64.255051\n",
              "31  71.371607\n",
              "32  65.960858\n",
              "33  62.932638\n",
              "34  68.385380"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "JF_O8R0_DAAZ",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "d485f6ed-1294-42f3-d5c2-0837d7008886"
      },
      "source": [
        "#Z-Score\n",
        "\n",
        "df_Salary['z-score'] = (df_Salary['Salary'] - mean1) / std1\n",
        "df_Salary"
      ],
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Salary</th>\n",
              "      <th>z-score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>67.440471</td>\n",
              "      <td>-2.607935</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>65.599034</td>\n",
              "      <td>-2.607992</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>67.878297</td>\n",
              "      <td>-2.607921</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>70.416787</td>\n",
              "      <td>-2.607842</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>65.320955</td>\n",
              "      <td>-2.608001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>65.321003</td>\n",
              "      <td>-2.608001</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>70.579717</td>\n",
              "      <td>-2.607837</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>68.225561</td>\n",
              "      <td>-2.607911</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>64.638524</td>\n",
              "      <td>-2.608022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>67.573424</td>\n",
              "      <td>-2.607931</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>64.656089</td>\n",
              "      <td>-2.608022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>64.649384</td>\n",
              "      <td>-2.608022</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>66.701691</td>\n",
              "      <td>-2.607958</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>60.451487</td>\n",
              "      <td>-2.608152</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>60.997738</td>\n",
              "      <td>-2.608135</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>64.369366</td>\n",
              "      <td>-2.608030</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>63.062790</td>\n",
              "      <td>-2.608071</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>66.911317</td>\n",
              "      <td>-2.607951</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>63.366730</td>\n",
              "      <td>-2.608062</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>61.904319</td>\n",
              "      <td>-2.608107</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>70.250381</td>\n",
              "      <td>-2.607848</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>65.345249</td>\n",
              "      <td>-2.608000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>66.195832</td>\n",
              "      <td>-2.607974</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>61.868230</td>\n",
              "      <td>-2.608108</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>64.421290</td>\n",
              "      <td>-2.608029</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>66.321676</td>\n",
              "      <td>-2.607970</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>62.662119</td>\n",
              "      <td>-2.608084</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>67.089524</td>\n",
              "      <td>-2.607946</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>64.258148</td>\n",
              "      <td>-2.608034</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>65.154088</td>\n",
              "      <td>-2.608006</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>64.255051</td>\n",
              "      <td>-2.608034</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>71.371607</td>\n",
              "      <td>-2.607813</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>65.960858</td>\n",
              "      <td>-2.607981</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>62.932638</td>\n",
              "      <td>-2.608075</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>68.385380</td>\n",
              "      <td>-2.607906</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "       Salary   z-score\n",
              "0   67.440471 -2.607935\n",
              "1   65.599034 -2.607992\n",
              "2   67.878297 -2.607921\n",
              "3   70.416787 -2.607842\n",
              "4   65.320955 -2.608001\n",
              "5   65.321003 -2.608001\n",
              "6   70.579717 -2.607837\n",
              "7   68.225561 -2.607911\n",
              "8   64.638524 -2.608022\n",
              "9   67.573424 -2.607931\n",
              "10  64.656089 -2.608022\n",
              "11  64.649384 -2.608022\n",
              "12  66.701691 -2.607958\n",
              "13  60.451487 -2.608152\n",
              "14  60.997738 -2.608135\n",
              "15  64.369366 -2.608030\n",
              "16  63.062790 -2.608071\n",
              "17  66.911317 -2.607951\n",
              "18  63.366730 -2.608062\n",
              "19  61.904319 -2.608107\n",
              "20  70.250381 -2.607848\n",
              "21  65.345249 -2.608000\n",
              "22  66.195832 -2.607974\n",
              "23  61.868230 -2.608108\n",
              "24  64.421290 -2.608029\n",
              "25  66.321676 -2.607970\n",
              "26  62.662119 -2.608084\n",
              "27  67.089524 -2.607946\n",
              "28  64.258148 -2.608034\n",
              "29  65.154088 -2.608006\n",
              "30  64.255051 -2.608034\n",
              "31  71.371607 -2.607813\n",
              "32  65.960858 -2.607981\n",
              "33  62.932638 -2.608075\n",
              "34  68.385380 -2.607906"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 106
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "bguqL1hTGkoi",
        "colab_type": "text"
      },
      "source": [
        "**`NORMAL DISTRIBUTION & SAMPLING\n",
        "DISTRIBUTIONS**"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IlaR0ShmEQe6",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 331
        },
        "outputId": "b88fad4e-e0df-42a6-c576-a0730ad8d2cf"
      },
      "source": [
        "sns.distplot(df_Salary['Salary'], color = \"Red\", hist = False)\n",
        "plt.xlabel(\"Salary\", labelpad = 12)\n",
        "plt.ylabel(\"Probability\", labelpad =12)\n",
        "plt.title(\"Distribution of Salaries\", y = 1.015, fontsize = 22)\n",
        "\n"
      ],
      "execution_count": 107,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.015, 'Distribution of Salaries')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 107
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Rg-juRgUIU5y",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 332
        },
        "outputId": "be819bb3-de59-4675-c774-8abece9c9a14"
      },
      "source": [
        "df_Salary['z-score'].hist(color = 'black')\n",
        "plt.title(\"Standart Normal Distribution\", y=1.015, fontsize = 20)\n",
        "plt.xlabel(\"z-score\", labelpad = 14)\n",
        "plt.ylabel(\"frequency\", labelpad = 14)\n"
      ],
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'frequency')"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 108
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "9yu1-MD4JAHp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "1845714b-a82d-4343-f6c6-9de882ff76cb"
      },
      "source": [
        "Example_Salary = 84578 #Example to examine, 84.578$ Salary with unknown Years of experience\n",
        "\n",
        "def z_score(value,mean1,std1):\n",
        "  return round((value - mean1)/ std1, 5) #Shortcut Function to calculate z-score of a data\n",
        "\n",
        "z_score_Example_Salary = z_score(Example_Salary,mean1,std1)\n",
        "print(\"Example_Salary has a z-score of {0} for her price relative to other salaries.\".format(z_score_Example_Salary))"
      ],
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Example_Salary has a z-score of 0.01966 for her price relative to other salaries.\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "J7Bk_puDKpTC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "a3908941-bbf8-4576-f990-873eee883828"
      },
      "source": [
        "from scipy import stats\n",
        "#Probability of this example salaries more than the others ;\n",
        "Example_Salary_more_expensive = round(stats.norm.cdf(z_score_Example_Salary),5)\n",
        "Example_Salary_more_expensive"
      ],
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.50784"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "5GavJjKBXvkp",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 35
        },
        "outputId": "834df5a0-604e-4976-cd04-ab092d364c2b"
      },
      "source": [
        "1 - Example_Salary_more_expensive\n",
        "#Probability of this example salary's less than the others\n"
      ],
      "execution_count": 111,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.49216000000000004"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 111
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "cQ15b26mSdYU",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 72
        },
        "outputId": "c9aacdcc-f21a-4b4d-e8c0-3a9d71b1133d"
      },
      "source": [
        "#Probability of a random Salary being between of 2 values\n",
        "Sal1 = 58934\n",
        "Sal2 = 98234\n",
        "z_score_Sal1 = z_score(Sal1,mean1,std1)\n",
        "z_score_Sal2 = z_score(Sal2,mean1,std1)\n",
        "\n",
        "print(z_score_Sal2)\n",
        "print(z_score_Sal1)\n",
        "\n",
        "finalresult = z_score_Sal2 - z_score_Sal1\n",
        "print(\"Z-score of a random salary picked between Sal2 and Sal1 is equal to {0} .\".format(finalresult))\n"
      ],
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.44425\n",
            "-0.77766\n",
            "Z-score of a random salary picked between Sal2 and Sal1 is equal to 1.22191 .\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}
